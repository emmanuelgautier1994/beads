{"version":3,"sources":["utils/color-utils.js","components/bead.js","components/canvas.js","components/hsl-sliders.js","components/color-picker.js","components/workspace.js","components/size-picker.js","App.js","serviceWorker.js","index.js"],"names":["CSSHSL","H","S","L","SatGradient","LightGradient","Bead","props","state","fill","this","x","y","currentColor","color","setState","width","height","stroke","strokeWidth","onClick","onTouchStart","onMouseEnter","e","buttons","onMouseLeave","React","Component","Canvas","range","s","Array","keys","handleClickOrTouch","onClickBead","size","viewBox","flatMap","map","key","HSLSliders","handleChange","setOneColorParam","target","name","parseFloat","value","satSliderStyle","background","lightSliderStyle","className","type","min","max","step","onChange","style","ColorPicker","current","history","setCurrentColor","borderRadius","c","i","cursor","margin","Workspace","param","newValue","includes","updateHistory","prevState","some","concat","slice","goHome","gridSize","SizePicker","submitSliderValue","useState","sizeValue","setSizeValue","id","stopPropagation","App","v","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.351464c6.chunk.js","sourcesContent":["export const hexToHSV = (hex) => {\n  const [r, g, b] = Object.values(hexToRGB(hex)).map(x => x / 255)\n\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n  const d = max - min\n\n  const v = max\n\n  const s = max === 0 ? 0 : d / max\n\n  let h\n\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n      case g: h = (b - r) / d + 2; break;\n      case b: h = (r - g) / d + 4; break;\n      default: h = 0;\n    }\n\n    h /= 6;\n  }\n  \n  return {h, s, v}\n}\n\nexport const HSVToHex = (h, s, v) => {\n  let r, g, b\n\n  const i = Math.floor(h * 6)\n  const f = h * 6 - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n\n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: ;\n  }\n\n  return RGBToHex(Math.round(r*255), Math.round(g*255), Math.round(b*255))\n}\n\nexport const CSSHSL = ({H, S, L}) => (\n  `hsl(${H}, ${S}%, ${L}%)`\n)\n\nexport const SatGradient = (H, L) => (\n  `linear-gradient(to right, hsl(${H}, 0%, ${L}%), hsl(${H}, 100%, ${L}%))`\n)\n\nexport const LightGradient = (H, S) => (\n  `linear-gradient(to right, hsl(${H}, ${S}%, 0%), hsl(${H}, ${S}%, 50%), hsl(${H}, ${S}%, 100%))`\n)\n\n\n\nconst hexToRGB = (hex) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  if(!result) return null\n\n  return {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  }\n}\n\nconst base16 = (n) => {\n  let b16 = Number(n).toString(16)\n  if(b16.length < 2) b16 = '0' + b16\n  return b16\n}\n\nconst RGBToHex = (r, g, b) => {\n  return '#' + base16(r) + base16(g) + base16(b)\n}","import React from 'react'\nimport { CSSHSL } from '../utils/color-utils'\n\nclass Bead extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { fill: \"white\"}\n  }\n\n  // shouldComponentUpdate = (_, nextState) => {\n  //   return nextState.fill !== this.state.fill\n  // }\n\n  render(){\n    const {Â x, y, currentColor } = this.props\n    const color = () => this.setState({fill: CSSHSL(currentColor)})\n\n    return (\n      <rect\n        x={2*x} y={x % 2 ? 2*y + 1.25 : 2*y + 0.25} width=\"2\" height=\"2\"\n        fill={this.state.fill} stroke=\"black\" strokeWidth=\"0.1\"\n        onClick={color}\n        onTouchStart={color}\n        onMouseEnter={(e) => {\n          if(e.buttons === 1) color()\n        }}\n        onMouseLeave={(e) => {\n          if(e.buttons === 1) color()\n        }}\n      />\n    )\n  }\n}\n\nexport default Bead\n","import React from 'react'\nimport Bead from './bead'\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { }\n  }\n\n  range = (s) => [...Array(s).keys()]\n\n  render(){\n    const handleClickOrTouch = this.props.onClickBead\n    const size = this.props.size\n    const viewBox = `0 0 ${2*size} ${2*(size+1)}`\n    return (\n      <svg \n        height=\"95%\" viewBox={viewBox}\n        onClick={handleClickOrTouch} onTouchStart={handleClickOrTouch}\n      >\n        {this.range(size).flatMap(x => this.range(size).map(y => \n          <Bead key={size*x + y} x={x} y={y} currentColor={this.props.currentColor} />\n        ))}\n      </svg>\n    )\n  }\n}\n\nexport default Canvas\n","import React from 'react'\nimport './hsl-sliders.css'\nimport { SatGradient, LightGradient } from '../utils/color-utils'\n\nclass HSLSliders extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state = { }\n  }\n  \n  handleChange = (e) => {\n    this.props.setOneColorParam(e.target.name, parseFloat(e.target.value))\n  }\n  \n  render(){\n    const {H, S, L} = this.props.color\n\n    const satSliderStyle = {background : SatGradient(H, L)}\n    const lightSliderStyle = {background : LightGradient(H, S)}\n\n    return(\n      <div className='grid-y align-center-middle text-center'>\n        <div className=\"cell small-4\">\n          <input\n            className=\"hsl-slider hue-gradient\"\n            name=\"H\"\n            type=\"range\" min=\"0\" max=\"360\" step=\"1\"\n            value={H}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"cell small-4\">\n          <input\n            className=\"hsl-slider\"\n            style={satSliderStyle}\n            name=\"S\"\n            type=\"range\" min=\"0\" max=\"100\" step=\"1\"\n            value={S}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"cell small-4\">\n          <input\n            className=\"hsl-slider\"\n            style={lightSliderStyle}\n            name=\"L\"\n            type=\"range\" min=\"0\" max=\"100\" step=\"1\"\n            value={L}\n            onChange={this.handleChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HSLSliders","import React from 'react'\nimport './color-picker.css'\n// import { HSVToHex } from '../utils/color-utils'\nimport HSLSliders from './hsl-sliders'\nimport { CSSHSL } from '../utils/color-utils'\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { }\n  }\n\n\n  render(){\n    // const hexCurrent = HSVToHex(...Object.values(this.props.current))\n    const { current, history, setCurrentColor, setOneColorParam } = this.props\n    const currentColorStyle = {\n      borderRadius: '100%',\n      height: '5em',\n      width: '5em'\n    }\n\n    return (\n      <div className=\"grid-x grid-padding-x grid-margin-y align-center-middle\" style={{height: '100%'}}>\n        <div className=\"cell small-2\">\n          <HSLSliders\n            color={current}\n            setOneColorParam={setOneColorParam}\n          />\n        </div>\n        <div className=\"cell small-1 text-center text-middle\" style={{height: '100%'}}>\n          <svg style={currentColorStyle} viewBox='0 0 1 1'>\n            <rect x='0' y='0' width='1' height='1' fill={CSSHSL(current)} />\n          </svg>\n        </div>\n        <div className=\"cell small-5\">\n          <div className=\"grid-x grid-margin-y\">\n            {history.map((c, i) => (\n              <div\n                key={`history-${i}`}\n                className='cell small-1'\n                style={{background: CSSHSL(c), width: '2em', height: '2em', cursor: 'pointer', borderRadius:'0.2em', margin: '0 0.5em'}}\n                onClick={() => {setCurrentColor(c)}}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker\n","import React from 'react'\nimport Canvas from './canvas'\nimport ColorPicker from './color-picker'\n// import { CurrentColorContext } from './current-color-context'\n// import { HSVToHex } from '../utils/color-utils'\n\nclass Workspace extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { H: 190, S: 80, L: 60, history: [] }\n  }\n\n  setCurrentColor = ({H, S, L}) => {this.setState({H, S, L})}\n\n  setOneColorParam = (param, newValue) => {\n    if(!(['H', 'S', 'L'].includes(param))) return\n    this.setState({[param]: newValue})\n  }\n\n  updateHistory = () => {\n    this.setState((prevState) => {\n      if(prevState.history.some(x => x.H === prevState.H && x.S === prevState.S && x.L === prevState.L)) return {}\n      return {\n        history: [{H: prevState.H, S: prevState.S, L: prevState.L}].concat(prevState.history).slice(0,12)\n      }\n    })\n  }\n\n\n  render(){\n    const { history, H, S, L } = this.state\n    const currentColor = { H, S, L}\n\n    return (\n      <div className=\"grid-y align-center-middle\" style={{width: '100%', height: '100%'}}>\n        <div className=\"cell small-2 text-center\">\n          <div className=\"grid-x grid-padding-x align-center-middle\" style={{height: '100%'}}>\n            <div className=\"cell small-1\">\n              <button type=\"button\" className=\"alert button\" onClick={this.props.goHome}>\n                <i className=\"fi-home\"></i>\n              </button>\n            </div>\n            <div className=\"cell small-11\">\n              <ColorPicker\n                current={currentColor}\n                history={history}\n                setOneColorParam={this.setOneColorParam}\n                setCurrentColor={this.setCurrentColor}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"cell small-10 align-center-middle\">\n          <Canvas size={this.props.gridSize} currentColor={currentColor} onClickBead={this.updateHistory} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Workspace\n","import React from 'react'\nimport './size-picker.css'\n\nconst SizePicker = ({ submitSliderValue }) => {\n  const [sizeValue, setSizeValue] = React.useState(20)\n\n  return (\n    <div className=\"grid-y align-center-middle\" style={{height: '100%'}}>\n      <div className=\"cell small-2\">\n        <div className=\"title\">\n          <span className='letter-b'>B</span>\n          <span className='letter-e'>e</span>\n          <span className='letter-a'>a</span>\n          <span className='letter-d'>d</span>\n          <span className='letter-s'>s</span>\n          </div>\n      </div>\n      <div className=\"cell small-2\" />\n      <div className=\"cell small-3\">\n        <div className='grid-x grid-padding-x align-center-middle'>\n          <div className='cell small-2 text-center'>\n            <div className='slider-value'><span>{sizeValue} x {sizeValue}</span></div>\n            <input\n            id=\"grid-size-picker\" className=\"slider\"\n            type=\"range\" min=\"5\" max=\"50\" step=\"1\"\n            value={sizeValue}\n            onChange={(e) => {setSizeValue(e.target.value)}}\n            />\n          </div>\n          <div className='cell small-1' />\n          <div className='cell small-1'>\n            <button\n              type=\"button\"\n              className=\"go-button\"\n              onClick={(e)=>{\n                e.stopPropagation()\n                submitSliderValue(sizeValue)}\n              }\n            >\n              Go!\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SizePicker","import React from 'react'\nimport './App.css'\nimport Workspace from './components/workspace'\nimport SizePicker from './components/size-picker'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { gridSize: 0 }\n  }\n\n  render(){\n    const gridSize = this.state.gridSize\n    return (\n      <div className=\"App\" style={{height: '100%', width: '100%'}}>\n        {gridSize > 0 ?\n        <Workspace gridSize={gridSize} goHome={() => { this.setState({gridSize: 0}) }} /> :\n        <SizePicker submitSliderValue={(v) => { this.setState({gridSize: parseInt(v)})} } />}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}